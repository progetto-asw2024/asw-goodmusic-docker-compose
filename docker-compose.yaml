services:
  connessioni:
    build:
      context: ./connessioni
    depends_on:
      - "consul"
      - "connessioni-db"
      - "kafka"
    deploy:
      mode: replicated
      replicas: 2
      #tags:
       # - "${REGISTRY}/connessioni:${TAG}"
        # - "${REGISTRY}/connessioni:latest"
  connessioni-db:
    image: docker.io/postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: connessionidb
  recensioni:
    build:
      context: ./recensioni
    depends_on:
      - "consul"
      - "recensioni-db"
      - "kafka"
    deploy:
      mode: replicated
      replicas: 2
      # tags:
      #   - "${REGISTRY}/recensioni:${TAG}"
      #   - "${REGISTRY}/recensioni:latest"
  recensioni-db:
    image: docker.io/postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: recensionidb

  recensioni-seguite:
    build:
      context: ./recensioni-seguite
    depends_on:
      - "consul"
      - "recensioni-seguite-db"
      - "kafka"
    deploy:
      mode: replicated
      replicas: 2
      # tags:
      #   - "${REGISTRY}/recensioni-seguite:${TAG}"
      #   - "${REGISTRY}/recensioni-seguite:latest"
  recensioni-seguite-db:
    image: docker.io/postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: recensioni-seguitedb
  api-gateway: 
    build:
      context: ./api-gateway
    ports:
      - "8080-8081:8080"
    depends_on:
      - "consul"
    deploy:
      mode: replicated
      replicas: 2
      endpoint_mode: vip
  consul:
    image: docker.io/hashicorp/consul
    ports:
      - "8500:8500"
  kafka:
    image: docker.io/bitnami/kafka:3.8
    # lasciamo la porta aperta sull'host per consentire la creazione dei topic
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      # tags:
      #   - "${REGISTRY}/apigateway:${TAG}"
      #   - "${REGISTRY}/apigateway:latest"
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - "8089:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
volumes:
  kafka_data:
    driver: local